# Task ID: 11
# Title: Freshdesk FDK 프로젝트 초기 설정
# Status: pending
# Dependencies: None
# Priority: high
# Description: Freshdesk FDK를 사용하여 앱의 기본 UI 구조와 레이아웃을 PRD에 명시된 대로 구현합니다. 여기에는 티켓 요약 카드, 3개의 탭 영역(유사 티켓, 추천 솔루션, OO와 대화하기)이 포함됩니다.
# Details:
Freshdesk FDK의 `app/` 디렉토리 내에 React 컴포넌트들을 생성하여 UI를 구성합니다. (예: `app/components/TicketSummaryCard.js`, `app/components/TabsArea.js` 등)

**티켓 요약 카드 (Ticket Summary Card)**:
- `/init` API로부터 받은 티켓 요약 정보를 표시합니다.
- 간결하고 명확한 정보 전달에 중점을 둡니다.

**3개의 탭 영역 (Tabs Area)**:
- **유사 티켓 (Similar Tickets) 탭**: `/init` API로부터 받은 유사 티켓 목록을 표시합니다. 각 티켓은 제목, ID, 유사도 점수 등을 포함할 수 있습니다.
- **추천 솔루션 (Recommended Solutions) 탭**: `/init` API로부터 받은 추천 기술 자료(솔루션) 목록을 표시합니다. 각 솔루션은 제목, ID, 관련성 점수 등을 포함할 수 있습니다.
- **OO와 대화하기 (Chat with OO) 탭**: 사용자가 현재 티켓 컨텍스트 내에서 LLM과 직접 대화할 수 있는 인터페이스를 제공합니다. 입력창과 대화 내용 표시 영역으로 구성됩니다. `/query` API를 호출하여 LLM 응답을 받아 표시합니다.

**기술 스택 및 구현 방식**:
- 상태 관리: Zustand (또는 React Context)를 사용하여 API 응답 데이터, 사용자 입력, UI 상태 등을 관리합니다.
- API 연동: Axios 또는 Fetch API를 사용하여 백엔드 API (`/init`, `/query`)를 호출하고 응답을 처리합니다.
- 스타일링: Freshdesk 앱 스타일에 맞춰 CSS 또는 CSS-in-JS 라이브러리를 사용하여 UI를 스타일링합니다. 반응형 디자인을 고려합니다.
- 컴포넌트 기반 개발: 재사용 가능한 UI 컴포넌트를 적극적으로 활용합니다.
- 모든 코드에는 상세한 한글 주석을 필수로 작성합니다.

**기본 설정 작업**:
- Freshdesk CLI 설치 및 설정(fdk-cli)
- FDK 프로젝트 생성 및 기본 구조 설정
- 필요한 의존성 설치: React, Zustand(3.7.0+) 또는 React Context, Axios, React Query(선택적)
- 프로젝트 구조 설정: app/, assets/, config/, services/, components/, hooks/
- 기본 스타일 및 테마 설정
- 개발 환경 설정 및 로컬 테스트 환경 구성
- 빌드 및 배포 스크립트 설정
- manifest.json 구성(앱 메타데이터, 권한 등)
- iparams.json 초기 설정

# Test Strategy:
- 티켓 요약 카드 UI 및 데이터 표시 정확성 검증
- 각 탭(유사 티켓, 추천 솔루션, OO와 대화하기)의 UI 및 기능 정상 동작 확인
- API 호출 및 응답 데이터 처리 로직 검증
- 상태 관리 로직(Zustand/Context)의 정확성 검증
- 다양한 화면 크기에서의 반응형 UI 동작 확인
- 사용자 인터랙션(탭 전환, 입력, 버튼 클릭 등)에 대한 UI 반응성 테스트
- 프로젝트 구조 검증, 의존성 설치 확인, 로컬 개발 환경 테스트, 빌드 프로세스 검증, manifest.json 유효성 검증

# Subtasks:
## 11.1. TicketSummaryCard React 컴포넌트 기본 구조 및 UI 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.2. TabsArea React 컴포넌트 및 3개 탭(유사 티켓, 추천 솔루션, OO와 대화하기) 기본 구조 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.3. 유사 티켓 탭 UI 및 데이터 표시 로직 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.4. 추천 솔루션 탭 UI 및 데이터 표시 로직 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.5. OO와 대화하기 탭 UI (입력창, 대화 내용 표시 영역) 및 기본 인터랙션 로직 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.6. Zustand (또는 React Context) 스토어 설정 및 상태 관리 로직 초기 구현 (API 데이터, UI 상태 등) [pending]
### Dependencies: None
### Description: 
### Details:


## 11.7. 백엔드 API (/init, /query) 호출을 위한 서비스 모듈(Axios/Fetch 사용) 구현 (app/services/api.js) [pending]
### Dependencies: None
### Description: 
### Details:


## 11.8. /init API 호출 및 응답 데이터를 티켓 요약 카드, 유사 티켓 탭, 추천 솔루션 탭에 바인딩하는 로직 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.9. /query API 호출 및 응답 데이터를 OO와 대화하기 탭에 표시하는 로직 구현 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.1. 기본 CSS 스타일링 및 Freshdesk UI 가이드라인 준수 [pending]
### Dependencies: None
### Description: 
### Details:


## 11.11. 각 주요 UI 컴포넌트에 대한 단위 테스트 또는 스토리북(Storybook) 설정 (선택적) [pending]
### Dependencies: None
### Description: 
### Details:



# Task ID: 9
# Title: /similar_tickets 엔드포인트 구현
# Status: pending
# Dependencies: 2, 3, 6
# Priority: medium
# Description: LLM Router를 통해 실제 LLM 호출을 관리하고, Context Builder로부터 받은 컨텍스트를 사용하여 프롬프트를 생성하며, LLM 응답을 후처리하는 LLM Orchestrator 모듈을 `core/llm_orchestrator.py`에 구현합니다.
# Details:
`core/llm_orchestrator.py`에 `LLMOrchestrator` 클래스 또는 관련 함수들을 구현합니다.
주요 기능:
- Context Builder가 생성한 컨텍스트와 사용자 질문을 기반으로 최종 LLM 프롬프트를 구성합니다.
- LLM Router(`core/llm_router.py`)를 사용하여 선택된 LLM(Anthropic, OpenAI, Gemini 등)에 프롬프트를 전달하고 응답을 받습니다.
- LLM 응답을 애플리케이션 요구사항에 맞게 후처리합니다 (예: JSON 형식 검증, BlockNote/마크다운 형식 변환, 불필요한 내용 제거, 안전성 필터링).
- LLM 호출 시 타임아웃 설정, 재시도 로직(필요시)을 관리합니다.
- LLM 사용량(토큰 수, 비용 등)을 추적하고 로깅할 수 있는 기능을 제공합니다.
- 스트리밍 응답을 지원해야 하는 경우, 해당 로직을 처리합니다 (구현 가능한 경우).
- `company_id`를 로깅 및 모니터링 목적으로 활용할 수 있습니다.

Context Builder(`core/context_builder.py`) 및 LLM Router(`core/llm_router.py`)와 긴밀하게 협력합니다.
모든 코드에는 상세한 한글 주석을 필수로 작성합니다.

# Test Strategy:
다양한 컨텍스트 및 질문에 대한 프롬프트 생성 결과 검증. LLM Router 연동 테스트 (각 LLM 제공자별 호출 성공 여부). LLM 응답 후처리 로직 테스트 (형식 변환, 내용 정제 등). 타임아웃 및 재시도 로직(구현된 경우) 검증. LLM 사용량 추적 및 로깅 기능 확인. 스트리밍 응답(구현된 경우) 테스트. LLM 호출 실패 시 에러 처리 및 폴백(LLM Router에서 처리) 확인.

# Subtasks:
## 9.1. LLMOrchestrator 클래스 또는 핵심 함수 기본 구조 설계 및 구현 [pending]
### Dependencies: None
### Description: `core/llm_orchestrator.py`에 LLMOrchestrator 클래스 또는 관련 함수들의 기본 구조를 설계하고 구현합니다.
### Details:


## 9.2. 최종 LLM 프롬프트 생성 로직 구현 [pending]
### Dependencies: None
### Description: Context Builder가 생성한 컨텍스트와 사용자 질문을 기반으로 최종 LLM 프롬프트를 구성하는 로직을 구현합니다.
### Details:


## 9.3. LLM Router를 통한 LLM 호출 로직 구현 [pending]
### Dependencies: None
### Description: LLM Router(`core/llm_router.py`)를 사용하여 선택된 LLM(Anthropic, OpenAI, Gemini 등)에 프롬프트를 전달하고 응답을 받는 로직을 구현합니다.
### Details:


## 9.4. LLM 응답 후처리 로직 구현 [pending]
### Dependencies: None
### Description: LLM 응답을 애플리케이션 요구사항에 맞게 후처리하는 로직(JSON 검증, BlockNote/마크다운 변환, 안전성 필터링 등)을 구현합니다.
### Details:


## 9.5. LLM 호출 타임아웃 및 재시도 로직 관리 기능 구현 [pending]
### Dependencies: None
### Description: LLM 호출 시 타임아웃 설정 및 필요시 재시도 로직을 관리하는 기능을 구현합니다.
### Details:


## 9.6. LLM 사용량 추적 및 로깅 기능 구현 [pending]
### Dependencies: None
### Description: LLM 사용량(토큰 수, 비용 등)을 추적하고 로깅할 수 있는 기능을 구현합니다.
### Details:


## 9.7. 스트리밍 응답 처리 로직 구현 [pending]
### Dependencies: None
### Description: 스트리밍 응답을 지원해야 하는 경우, 해당 로직을 처리하는 기능을 구현합니다.
### Details:


## 9.8. LLM Orchestrator 모듈 단위 테스트 작성 [pending]
### Dependencies: None
### Description: `tests/core/` 디렉토리에 LLM Orchestrator 모듈에 대한 단위 테스트를 작성합니다.
### Details:



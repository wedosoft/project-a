# Task ID: 21
# Title: MVP 성능 기준 설정 및 기본 로깅/모니터링 구축
# Status: pending
# Dependencies: 1, 6
# Priority: medium
# Description: MVP 단계에서 핵심 API 엔드포인트의 응답 시간 목표를 설정하고, 기본적인 성능 지표(응답 시간, 에러율) 로깅을 구현합니다. Qdrant 및 LLM API 호출에 대한 로깅을 강화하여 병목 지점을 식별할 수 있도록 합니다. 구조화된 로깅을 사용하여 로그 분석을 용이하게 합니다.
# Details:
- 주요 API 엔드포인트 (`/init`, `/query`)의 평균 응답 시간 목표 설정 (예: 2초 이내).\n- FastAPI 미들웨어를 사용하여 각 요청의 처리 시간 로깅.\n- Qdrant 검색 호출 시간 및 LLM API 호출 시간 상세 로깅 (요청 파라미터, 응답 상태 포함).\n- 주요 에러 발생 빈도 및 유형 로깅.\n- `company_id`별 API 사용량 및 성능 지표 기본 로깅 (분석 용도).\n- (MVP 이후) Prometheus, Grafana 또는 클라우드 제공 모니터링 서비스(예: AWS CloudWatch, Azure Monitor) 연동 계획 수립.

# Test Strategy:
- 간단한 부하 테스트를 통해 설정된 MVP 성능 목표(응답 시간) 달성 여부 확인.\n- 로깅된 성능 지표(응답 시간, Qdrant/LLM 호출 시간, 에러율)의 정확성 및 유용성 검증.\n- 다양한 조건(정상, 에러, 높은 부하)에서 로깅 시스템이 정상 동작하는지 확인.

# Subtasks:
## 21.1. 주요 API 엔드포인트 응답 시간 로깅 구현 [pending]
### Dependencies: None
### Description: FastAPI 미들웨어를 활용하여 `/init`, `/query` 등 주요 API의 요청 시작/종료 시간 및 처리 시간 로깅
### Details:


## 21.2. Qdrant 및 LLM API 호출 시간 상세 로깅 추가 [pending]
### Dependencies: None
### Description: Qdrant 클라이언트 및 LLM Router/Orchestrator 내부에 각 외부 API 호출 시간 및 주요 파라미터 로깅 추가
### Details:


## 21.3. 구조화된 에러 로깅 강화 [pending]
### Dependencies: None
### Description: 발생한 예외 정보(타입, 메시지, 스택 트레이스 일부)와 함께 요청 컨텍스트(request_id, company_id)를 포함하는 구조화된 에러 로깅 구현
### Details:


## 21.4. 기본 성능 지표(에러율, 평균 응답 시간) 집계 방안 검토 (MVP) [pending]
### Dependencies: None
### Description: 로그 기반으로 간단하게 주요 성능 지표를 집계하거나 확인할 수 있는 방안 검토 (예: 특정 로그 패턴 검색)
### Details:



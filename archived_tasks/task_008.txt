# Task ID: 8
# Title: /query 엔드포인트 구현
# Status: completed
# Dependencies: 2, 3, 4, 5, 6
# Priority: high
# Description: Qdrant 벡터 DB에서 관련 정보를 검색하는 Retriever 모듈을 `core/retriever.py`에 구현합니다. 이 모듈은 Context Builder의 요청에 따라 유사 티켓, 관련 기술 자료 등을 검색하여 제공합니다.
# Details:
`core/retriever.py`에 `Retriever` 클래스 또는 관련 함수들을 구현합니다. 주요 기능으로는 입력된 텍스트(예: 현재 티켓 내용 또는 사용자 질문)를 기반으로 Qdrant에서 유사도 검색을 수행하고, 검색 대상 컬렉션(예: `tickets`, `solutions`) 및 `company_id`를 기준으로 필터링합니다. 검색 결과의 개수(top_k)를 조절할 수 있는 매개변수를 제공하며, 다양한 검색 전략을 지원할 수 있도록 설계합니다(예: 순수 벡터 검색, 메타데이터 필터링 결합, 하이브리드 검색). 검색 결과에는 원본 텍스트 조각, 메타데이터, 유사도 점수 등을 포함하여 반환하고, Qdrant 클라이언트를 사용하여 Qdrant와 상호작용합니다. Context Builder(`core/context_builder.py`) 모듈과 긴밀하게 협력하며, 모든 코드에는 상세한 한글 주석을 필수로 작성합니다.

# Test Strategy:
다양한 검색어 및 `company_id`에 대한 검색 결과의 정확성 및 관련성 검증. `top_k` 매개변수 조절에 따른 결과 개수 변화 확인. 필터링 조건(컬렉션, `company_id`) 적용 결과 검증. 검색 속도 및 성능 측정. Qdrant 연결 실패 등 예외 상황에 대한 에러 처리 검증. Context Builder와의 연동 테스트.

# Subtasks:
## 8.1. Retriever 클래스 또는 핵심 함수 기본 구조 설계 및 구현 [pending]
### Dependencies: None
### Description: `core/retriever.py`에 Retriever 클래스 또는 핵심 함수의 기본 구조를 설계하고 구현합니다.
### Details:


## 8.2. 입력 텍스트에 대한 임베딩 생성 로직 연동 [pending]
### Dependencies: None
### Description: OpenAI 임베딩 모듈을 활용하여 입력 텍스트에 대한 임베딩을 생성하는 로직을 구현합니다.
### Details:


## 8.3. 티켓 검색용 Qdrant 유사도 검색 함수 구현 [pending]
### Dependencies: None
### Description: 티켓 데이터를 대상으로 Qdrant에서 유사도 검색을 수행하는 함수를 구현합니다.
### Details:


## 8.4. 기술 자료 검색용 Qdrant 유사도 검색 함수 구현 [pending]
### Dependencies: None
### Description: 기술 자료를 대상으로 Qdrant에서 유사도 검색을 수행하는 함수를 구현합니다.
### Details:


## 8.5. company_id 및 기타 메타데이터 필터링 적용 로직 구현 [pending]
### Dependencies: None
### Description: 검색 시 company_id 및 기타 메타데이터를 기준으로 필터링을 적용하는 로직을 구현합니다.
### Details:


## 8.6. 검색 결과 개수(top_k) 조절 기능 구현 [pending]
### Dependencies: None
### Description: 검색 결과의 개수를 조절할 수 있는 매개변수(top_k)를 구현합니다.
### Details:


## 8.7. 검색 결과 포맷팅 로직 구현 [pending]
### Dependencies: None
### Description: 검색 결과(텍스트 조각, 메타데이터, 점수)를 적절한 형식으로 포맷팅하는 로직을 구현합니다.
### Details:


## 8.8. Qdrant 클라이언트 연동 로직 구현 [pending]
### Dependencies: None
### Description: Qdrant 클라이언트(`core/vectordb.py` 또는 `data/qdrant_handler.py`의 함수)를 사용하여 Qdrant와 상호작용하는 로직을 구현합니다.
### Details:


## 8.9. Retriever 모듈 단위 테스트 작성 [pending]
### Dependencies: None
### Description: `tests/core/` 디렉토리에 Retriever 모듈에 대한 단위 테스트를 작성합니다.
### Details:



# Task ID: 14
# Title: 티켓 요약 카드 컴포넌트 개발
# Status: pending
# Dependencies: 12, 13
# Priority: medium
# Description: 백엔드 FastAPI 애플리케이션을 위한 Dockerfile 및 docker-compose.yml 파일을 작성하여 컨테이너화하고, 개발 및 프로덕션 환경 관리를 용이하게 합니다.
# Details:
**Dockerfile (`backend/Dockerfile`)**:
- Python 3.10을 공식 베이스 이미지로 사용합니다.
- 작업 디렉토리를 설정하고, `requirements.txt`를 복사하여 의존성을 설치합니다.
- 애플리케이션 코드를 컨테이너에 복사합니다.
- FastAPI 애플리케이션 실행을 위해 Uvicorn을 사용하며, 적절한 포트(예: 8000)를 노출합니다.
- 멀티스테이지 빌드를 활용하여 최종 이미지 크기를 최적화할 수 있습니다 (선택적).
- 비루트 사용자로 애플리케이션을 실행하도록 설정하여 보안을 강화합니다 (선택적).

**docker-compose.yml (`docker-compose.yml` 또는 `backend/docker-compose.yml`)**:
- 백엔드 서비스(`backend`)를 정의하고, 위에서 작성한 Dockerfile을 빌드하도록 설정합니다.
- 환경 변수 파일을 (`.env`) 참조하여 컨테이너에 환경 변수를 주입합니다. (예: `env_file: ./backend/.env`)
- 포트 매핑 설정을 통해 호스트와 컨테이너 간 포트를 연결합니다 (예: `8000:8000`).
- 볼륨 마운트를 설정하여 개발 시 코드 변경 사항이 컨테이너에 실시간으로 반영되도록 합니다 (개발 환경용 설정).
- (선택적) Qdrant, 데이터베이스 등 외부 서비스가 로컬 개발 환경에 필요하다면, 해당 서비스들도 docker-compose에 추가할 수 있습니다. (단, Qdrant Cloud 사용 시에는 불필요)
- 네트워크 설정을 통해 서비스 간 통신을 관리합니다 (필요시).

- `requirements.txt` 파일에는 FastAPI, Uvicorn, Pydantic, httpx, python-dotenv 등 필요한 모든 Python 라이브러리와 버전을 명시합니다.
- 모든 코드 및 설정 파일에는 상세한 한글 주석을 필수로 작성합니다.

# Test Strategy:
- `docker build` 명령어를 사용하여 Docker 이미지가 성공적으로 빌드되는지 확인.
- `docker-compose up` 명령어를 사용하여 백엔드 서비스가 정상적으로 실행되는지 확인.
- 컨테이너 로그를 통해 애플리케이션 시작 오류 여부 확인.
- 호스트에서 매핑된 포트(예: `http://localhost:8000`)로 접속하여 API (예: 헬스체크 엔드포인트)가 정상 응답하는지 테스트.
- 환경 변수가 컨테이너 내 애플리케이션에 올바르게 주입되었는지 확인.
- 개발 환경에서 코드 변경 시 볼륨 마운트를 통해 컨테이너에 자동 반영(Uvicorn --reload 사용 시)되는지 확인.

# Subtasks:
## 14.1. 백엔드 Python 의존성 목록을 `backend/requirements.txt` 파일로 정리 [pending]
### Dependencies: None
### Description: 
### Details:


## 14.2. `backend/Dockerfile` 작성 (Python 3.10 베이스, 의존성 설치, 코드 복사, Uvicorn 실행) [pending]
### Dependencies: None
### Description: 
### Details:


## 14.3. (선택적) Dockerfile에 멀티스테이지 빌드 및 비루트 사용자 실행 로직 추가 [pending]
### Dependencies: None
### Description: 
### Details:


## 14.4. 루트 또는 `backend/` 디렉토리에 `docker-compose.yml` 파일 작성 [pending]
### Dependencies: None
### Description: 
### Details:


## 14.5. `docker-compose.yml`에 백엔드 서비스 정의 (빌드 컨텍스트, Dockerfile 경로, 포트 매핑, 환경 변수 파일 참조) [pending]
### Dependencies: None
### Description: 
### Details:


## 14.6. (개발용) `docker-compose.yml`에 소스 코드 볼륨 마운트 설정 추가 [pending]
### Dependencies: None
### Description: 
### Details:


## 14.7. (선택적) 로컬 개발용 외부 서비스(예: 로컬 Qdrant)를 `docker-compose.yml`에 추가 [pending]
### Dependencies: None
### Description: 
### Details:


## 14.8. Docker 이미지 빌드 테스트 (`docker build . -t backend-app`) [pending]
### Dependencies: None
### Description: 
### Details:


## 14.9. Docker Compose 실행 테스트 (`docker-compose up`) [pending]
### Dependencies: None
### Description: 
### Details:


## 14.10. 실행된 컨테이너의 API 엔드포인트(헬스체크 등) 접근 테스트 [pending]
### Dependencies: None
### Description: 
### Details:



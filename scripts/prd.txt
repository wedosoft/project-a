# Product Requirements Document (PRD)
# Prompt Canvas - Freshdesk Custom App 백엔드 서비스

## 1. 프로젝트 개요

### 1.1 제품 비전
Freshdesk 상담사를 위한 AI 기반 응답 보조 도구로, RAG(Retrieval-Augmented Generation) 기술을 활용하여 티켓 정보와 지식베이스를 기반으로 정확하고 상황에 맞는 응답을 생성하는 Freshdesk Custom App 백엔드 서비스 개발

### 1.2 핵심 목표
- Freshdesk 티켓 데이터와 지식베이스를 벡터 DB에 저장하여 효율적인 검색 시스템 구축
- LLM Router 패턴으로 다중 AI 모델(Anthropic Claude, OpenAI GPT, Google Gemini) 지원
- 블록 기반 에디터(BlockNote)와 연동되는 API 엔드포인트 제공
- 고성능 비동기 처리 및 캐싱 전략으로 빠른 응답 시간 보장

## 2. 기술 요구사항

### 2.1 백엔드 기술 스택
- **언어**: Python 3.10+
- **프레임워크**: FastAPI (async/await)
- **벡터 DB**: Qdrant Cloud
- **임베딩**: OpenAI Embeddings (text-embedding-3-small)
- **LLM**: Anthropic Claude, OpenAI GPT, Google Gemini
- **컨테이너**: Docker, docker-compose
- **외부 API**: Freshdesk API

### 2.2 프론트엔드 연동
- **에디터**: BlockNote 블록 기반 에디터
- **플랫폼**: Freshdesk FDK (Freshdesk Developer Kit)
- **UI 구성**: 4개 탭 (티켓 요약, 블록 에디터, 유사 티켓/문서, 이미지 갤러리)

## 3. 핵심 기능 명세

### 3.1 데이터 수집 및 처리
- Freshdesk API를 통한 대용량 티켓 데이터 수집 (500만건+ 지원)
- 지식베이스 문서 수집 및 전처리
- 첨부파일 처리 및 메타데이터 추출
- 청크 단위 배치 처리로 메모리 효율성 확보

### 3.2 벡터 검색 시스템
- company_id 기반 멀티테넌트 데이터 분리
- 의미론적 유사도 검색
- 메타데이터 필터링 (날짜, 카테고리, 우선순위 등)
- 하이브리드 검색 (키워드 + 벡터)

### 3.3 AI 응답 생성
- LLM Router를 통한 다중 모델 지원 및 자동 폴백
- 컨텍스트 기반 프롬프트 구성
- 블록 단위 응답 생성 및 개선 기능
- 응답 품질 검증 및 후처리

### 3.4 API 엔드포인트
- `/init`: 티켓 요약 및 초기 컨텍스트 구성
- `/generate_reply`: AI 기반 응답 생성
- `/similar_tickets`: 유사 티켓 검색
- `/related_docs`: 관련 문서 검색
- `/image_gallery`: 관련 이미지 목록 제공
- `/rewrite_block`: 개별 블록 내용 개선

## 4. 성능 및 확장성 요구사항

### 4.1 성능 목표
- API 응답 시간: 평균 2초 이내
- 동시 사용자: 100명 이상 지원
- 벡터 검색: 1초 이내 결과 반환
- 대용량 데이터 처리: 1일 50만건 이상

### 4.2 확장성 설계
- 마이크로서비스 아키텍처 적용 가능한 모듈 분리
- 수평 확장 가능한 컨테이너 기반 배포
- 캐싱 레이어를 통한 성능 최적화
- 비동기 처리 및 백그라운드 작업 지원

## 5. 보안 및 데이터 관리

### 5.1 보안 요구사항
- API 키 및 민감정보 환경변수 관리
- company_id 기반 데이터 격리
- 요청 검증 및 Rate Limiting
- CORS 및 보안 헤더 설정

### 5.2 데이터 관리
- 고객사별 데이터 분리 및 보안
- 개인정보 마스킹 및 익명화
- 백업 및 복구 전략
- 데이터 보존 정책 준수

## 6. 운영 및 모니터링

### 6.1 로깅 및 모니터링
- 구조화된 로깅 (JSON 형태)
- 성능 메트릭 수집 및 모니터링
- 에러 추적 및 알림 시스템
- 사용량 통계 및 분석

### 6.2 배포 및 운영
- Docker 컨테이너 기반 배포
- CI/CD 파이프라인 구축
- 무중단 배포 지원
- 헬스체크 및 자동 복구

## 7. 개발 우선순위

### Phase 1: MVP 구축 (4주)
1. 기본 FastAPI 서버 및 Qdrant 연동
2. Freshdesk API 데이터 수집 기능
3. 벡터 임베딩 및 검색 기능
4. 기본 LLM 연동 및 응답 생성

### Phase 2: 고도화 (4주)
1. LLM Router 및 다중 모델 지원
2. 블록 기반 응답 생성 및 개선
3. 캐싱 및 성능 최적화
4. 관리자 설정 및 커스터마이징

### Phase 3: 확장 (4주)
1. 이미지 처리 및 갤러리 기능
2. 고급 검색 및 필터링
3. 모니터링 및 분석 기능
4. 보안 강화 및 운영 자동화

## 8. 성공 지표

### 8.1 기술적 지표
- API 응답 시간: 평균 2초 이내
- 시스템 가용성: 99.9% 이상
- 검색 정확도: 85% 이상
- 메모리 사용량: 8GB 이하

### 8.2 비즈니스 지표
- 상담사 응답 시간 단축: 50% 이상
- 응답 품질 만족도: 4.5/5.0 이상
- 시스템 채택률: 80% 이상
- 고객 만족도 향상: 20% 이상

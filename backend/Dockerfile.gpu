# EC2 GPU 인스턴스 전용 Dockerfile
# CUDA 11.8 + PyTorch GPU 지원

ARG CUDA_VERSION=11.8
FROM nvidia/cuda:${CUDA_VERSION}-runtime-ubuntu20.04

# 환경변수 설정
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV CUDA_VISIBLE_DEVICES=0
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# 시스템 패키지 설치
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    curl \
    wget \
    git \
    && rm -rf /var/lib/apt/lists/*

# Python 심볼릭 링크
RUN ln -s /usr/bin/python3 /usr/bin/python

# 작업 디렉토리 설정
WORKDIR /app

# requirements.txt 복사 및 의존성 설치
COPY requirements.txt .

# pip 업그레이드
RUN pip install --upgrade pip

# PyTorch CUDA 버전 설치 (우선 설치)
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# 나머지 의존성 설치
RUN pip install -r requirements.txt

# 애플리케이션 코드 복사
COPY . .

# 데이터 및 로그 디렉토리 생성
RUN mkdir -p /app/data /app/logs

# 포트 노출
EXPOSE 8000

# GPU 상태 확인 스크립트
RUN echo '#!/bin/bash\n\
echo "=== GPU 환경 확인 ==="\n\
nvidia-smi\n\
echo\n\
echo "=== PyTorch CUDA 상태 ==="\n\
python -c "import torch; print(f\"CUDA available: {torch.cuda.is_available()}\"); print(f\"CUDA devices: {torch.cuda.device_count()}\"); print(f\"Current device: {torch.cuda.current_device() if torch.cuda.is_available() else 'N/A'}\")"\n\
echo\n\
echo "=== 임베딩 시스템 상태 ==="\n\
python -c "from core.search.embeddings import log_embedding_status; log_embedding_status()"\n\
' > /app/check_gpu.sh && chmod +x /app/check_gpu.sh

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# 애플리케이션 실행
CMD ["python", "-m", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]